//https://leetcode.com/problems/is-subsequence/
class Solution {
    public boolean isSubsequence(String s, String t) {
        return fun(s,t,0,0);
    }
    public boolean fun(String s, String t, int n,int m) {
        if(n==s.length()) return true;
        if(m==t.length()) return false;
        if(s.charAt(n) == (t.charAt(m))) return fun(s,t,n+1,m+1);
        else return fun(s,t,n,m+1);
    }
}
// tabulation
class Solution {
    public boolean isSubsequence(String s, String t) {
        int n= s.length(), m = t.length();
         boolean dp[][] =new boolean [n+1][m+1];
        for(int i=0;i<n+1;i++){
            dp[i][0] = false;
        }
        for(int j=0;j<m+1;j++){
            dp[0][j] = true;
        }
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
            if(s.charAt(i-1) == (t.charAt(j-1))) dp[i][j] = dp[i-1][j-1];
            else dp [i][j]= dp[i][j-1];
            }
        }
        return dp[n][m];   
        
    }
